import streamlit as st
import torch
from torchvision import transforms
from torchvision.models import resnet18
from PIL import Image
import os

# ==== T√™n b·ªánh: Ti·∫øng Anh + Ti·∫øng Vi·ªát ====
label_names = [
    ("Melanocytic nevi (nv)", "N·ªët ru·ªìi l√†nh t√≠nh"),
    ("Melanoma (mel)", "U h·∫Øc t·ªë √°c t√≠nh"),
    ("Benign keratosis-like lesions (bkl)", "T·ªïn th∆∞∆°ng s·ª´ng h√≥a l√†nh t√≠nh"),
    ("Basal cell carcinoma (bcc)", "Ung th∆∞ bi·ªÉu m√¥ t·∫ø b√†o ƒë√°y"),
    ("Actinic keratoses (akiec)", "D√†y s·ª´ng quang h√≥a"),
    ("Vascular lesions (vasc)", "T·ªïn th∆∞∆°ng m·∫°ch m√°u"),
    ("Dermatofibroma (df)", "U x∆° da")
]

# ==== Load model t·ª´ th∆∞ m·ª•c hi·ªán t·∫°i ====
BASE_DIR = os.path.dirname(os.path.abspath(__file__))
MODEL_PATH = os.path.join(BASE_DIR, "skin_resnet18.pth")

model = resnet18(weights=None)
model.fc = torch.nn.Linear(model.fc.in_features, 7)
model.load_state_dict(torch.load(MODEL_PATH, map_location="cpu"))
model.eval()

# ==== H√†m hi·ªÉn th·ªã giao di·ªán ====
def show_skin():
    st.title("ü©∫ Ph√¢n lo·∫°i b·ªánh da li·ªÖu (HAM10000)")
    uploaded_file = st.file_uploader("T·∫£i ·∫£nh da c·∫ßn ch·∫©n ƒëo√°n", type=["jpg", "png", "jpeg"])

    if uploaded_file:
        image = Image.open(uploaded_file).convert("RGB")
        st.image(image, caption="·∫¢nh ƒë√£ t·∫£i l√™n", use_container_width=True)

        transform = transforms.Compose([
            transforms.Resize((224, 224)),
            transforms.ToTensor(),
            transforms.Normalize([0.5]*3, [0.5]*3)
        ])
        input_tensor = transform(image).unsqueeze(0)

        with torch.no_grad():
            output = model(input_tensor)
            pred = output.argmax(1).item()
            prob = torch.nn.functional.softmax(output, dim=1)[0][pred].item()

        eng, viet = label_names[pred]
        st.markdown(f"### üß† K·∫øt qu·∫£: **{viet}**")
        st.caption(f"({eng})")
        st.markdown(f"üîç ƒê·ªô tin c·∫≠y: **{prob*100:.2f}%**")
